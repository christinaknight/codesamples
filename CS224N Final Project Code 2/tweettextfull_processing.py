# -*- coding: utf-8 -*-
"""tweettextfull_processing.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zFe7I6V24MBxk7ISo6qNmSkC4bZV58Sl
"""

!pip install transformers
!pip install datasets
!pip install huggingface_hub

from datasets import load_dataset, DatasetDict
from huggingface_hub import notebook_login

notebook_login()

tweets = load_dataset('chiarab/jan-2021-unlabeled-full', use_auth_token=True)

print(tweets['train'][0])

# Commented out IPython magic to ensure Python compatibility.
from google.colab import drive
drive.mount('/content/drive')
# %cd /content/drive/MyDrive/CS224N_Final_Project

import shutil
import os
import csv
import linecache
from shutil import copyfile
import ipywidgets as widgets
import numpy as np
import pandas as pd
from collections import Counter
import matplotlib.pyplot as plt

df = pd.read_csv('/content/drive/MyDrive/CS224N_Final_Project/real-world/hydrated-jan-2021.csv',sep=",")
df2 = pd.read_csv('/content/drive/MyDrive/CS224N_Final_Project/real-world/hydrated-may-2020.csv',sep=",")
df3 = pd.read_csv('/content/drive/MyDrive/CS224N_Final_Project/real-world/hydrated-aug-2021.csv',sep=",")
df4 = pd.read_csv('/content/drive/MyDrive/CS224N_Final_Project/real-world/hydrated-jan-2022.csv',sep=",")

df.columns = ['text', 'date', 'country']
df2.columns = ['text', 'date', 'country']
df3.columns = ['text', 'date', 'country']
df4.columns = ['text', 'date', 'country']

countries = df['country'].tolist() + df2['country'].tolist() + df3['country'].tolist() + df4['country'].tolist()
tweets = df['text'].tolist() + df2['text'].tolist() + df3['text'].tolist() + df4['text'].tolist()
print(countries)

canada_dct = []
us_dct = []
uk_dct = []
nc = []
for t in range(len(tweets)):
  tweet = tweets[t]
  if "covid app" in tweet or "tracing app" in tweet or "COVID-19 app" in tweet or "contact tracing" in tweet or "privacy" in tweet or "security" in tweet or "surveillance" in tweet or "app security" in tweet or "app privacy" in tweet or "contain virus spread" in tweet or "movement tracking" in tweet or "covid application" in tweet or "DCT" in tweet or "digital" in tweet or "bluetooth" in tweet or "tracing" in tweet:
    nc.append(tweet)
    
nc = pd.DataFrame({'OriginalTweet' : nc}, columns = ['OriginalTweet'])
nc.to_csv("dct_keyword_all.csv")
print(nc)

#  if “covid app” in tweet or “tracing app” in tweet or “contact tracing” in tweet or “privacy” in tweet or “security” in tweet or “app security” in tweet or “app privacy” in tweet or “contain virus spread” in tweet or “movement tracking” in tweet or “tracking” in tweet or “surveillance

#DCT by country
canada_dct = []
us_dct = []
uk_dct = []
nc = []
for t in range(len(tweets)):
  tweet = tweets[t]
  co = countries[t]
  if "covid app" in tweet or "tracing app" in tweet or "COVID-19 app" in tweet or "contact tracing" in tweet or "privacy" in tweet or "security" in tweet or "surveillance" in tweet or "app security" in tweet or "app privacy" in tweet or "contain virus spread" in tweet or "movement tracking" in tweet or "covid application" in tweet or "DCT" in tweet or "digital" in tweet or "bluetooth" in tweet or "tracing" in tweet:
    if co == 'Canada': 
      canada_dct.append(tweet)
    elif co == 'United States':
      us_dct.append(tweet)
    else:
      uk_dct.append(tweet)


df_us_dct = pd.DataFrame({'OriginalTweet' : us_dct}, columns = ['OriginalTweet'])
df_us_dct.to_csv("dct_keyword_us.csv")
df_uk_dct = pd.DataFrame({'OriginalTweet' : uk_dct}, columns = ['OriginalTweet'])
df_uk_dct.to_csv("dct_keyword_uk.csv")
df_can_dct = pd.DataFrame({'OriginalTweet' : canada_dct}, columns = ['OriginalTweet'])
df_can_dct.to_csv("dct_keyword_canada.csv")
print(df_us_dct)

nt2 = []
nc2 = []
for t in range(len(tweets)):
  tweet = tweets[t]
  if "vaccine" in tweet or "innoculation" in tweet or "covid shot" in tweet or "pfizer" in tweet or "moderna" in tweet or "johnson and johnson" in tweet:
    nt2.append(tweet)
    nc2.append(tweet)
    
df5 = pd.DataFrame({'OriginalTweet' : nt2}, columns = ['OriginalTweet'])
df5.to_csv("vaccine_keyword_all.csv")
print(df5)

#vax by country
canada_vax = []
us_vax = []
uk_vax = []
for t in range(len(tweets)):
  tweet = tweets[t]
  co = countries[t]
  if "vaccine" in tweet or "innoculation" in tweet or "covid shot" in tweet or "pfizer" in tweet or "moderna" in tweet or "johnson and johnson" in tweet:
    if co == 'Canada': 
      canada_vax.append(tweet)
    elif co == 'United States':
      us_vax.append(tweet)
    else:
      uk_vax.append(tweet)


df_us_v = pd.DataFrame({'OriginalTweet' : us_vax}, columns = ['OriginalTweet'])
df_us_v.to_csv("vax_keyword_us.csv")
df_uk_v = pd.DataFrame({'OriginalTweet' : uk_vax}, columns = ['OriginalTweet'])
df_uk_v.to_csv("vax_keyword_uk.csv")
df_can_v = pd.DataFrame({'OriginalTweet' : canada_vax}, columns = ['OriginalTweet'])
df_can_v.to_csv("vax_keyword_canada.csv")
print(df_us_v)

#Overall country
canada = []
us = []
uk = []
for t in range(len(tweets)):
  tweet = tweets[t]
  co = countries[t]
  if co == 'Canada': 
    canada.append(tweet)
  elif co == 'United States':
    us.append(tweet)
  else:
    uk.append(tweet)


df_us = pd.DataFrame({'OriginalTweet' : us}, columns = ['OriginalTweet'])
df_us.to_csv("us.csv")
df_uk = pd.DataFrame({'OriginalTweet' : uk}, columns = ['OriginalTweet'])
df_uk.to_csv("uk.csv")
df_can = pd.DataFrame({'OriginalTweet' : canada}, columns = ['OriginalTweet'])
df_can.to_csv("canada.csv")

#Overall By Country
canada_dct = []
us_dct = []
uk_dct = []
nc = []
for t in range(len(tweets)):
  tweet = tweets[t]
  co = countries[t]
    if co == 'Canada': 
      canada_dct.append(tweet)
    elif co == 'United States':
      us_dct.append(tweet)
    else:
      uk_dct.append(tweet)


df_us_dct = pd.DataFrame({'OriginalTweet' : us_dct}, columns = ['OriginalTweet'])
df_us_dct.to_csv("dct_keyword_us.csv")
df_uk_dct = pd.DataFrame({'OriginalTweet' : uk_dct}, columns = ['OriginalTweet'])
df_uk_dct.to_csv("dct_keyword_uk.csv")
df_can_dct = pd.DataFrame({'OriginalTweet' : canada_dct}, columns = ['OriginalTweet'])
df_can_dct.to_csv("dct_keyword_canada.csv")
print(df_us_dct)